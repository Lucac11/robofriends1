{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","React","createElement","className","src","concat","alt","CardList","_ref","robots","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","_Component","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","hasError","_inherits","_createClass","value","error","info","setState","Component","App","onSearchChange","event","target","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.6ed9d435.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst Card = (props) => {\r\n  const { name, email, id } = props;\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n      <img src={`https://robohash.org/${id}?200x200`} alt=\"robots\" />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from './Card.js'\r\n\r\nconst CardList = ({ robots }) => {\r\n    return(\r\n      <div>\r\n        {\r\n          robots.map((user, i) => {\r\n            return (\r\n              <Card \r\n                key={i} \r\n                id={robots[i].id} \r\n                name={robots[i].name} \r\n                email={robots[i].email}\r\n              />\r\n            );\r\n        })\r\n        }\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchfield, searchChange}) => {\r\n  return(\r\n    <div className=\"pa2\">\r\n      <input \r\n        className=\"pa2 ba b--green bg-lightest-blue\" \r\n        type=\"search\" \r\n        placeholder=\"search robots\"\r\n        onChange={searchChange}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  return(\r\n    <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true })\r\n  }\r\n\r\n  render() {\r\n      if (this.state.hasError) {\r\n        return <h1>It's not looking good bruv</h1>\r\n      }\r\n      return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundry from \"../components/ErrorBoundry\";\r\nimport './App.css';\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(users => this.setState({ robots: users }));\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value })\r\n  }\r\n\r\n  render() {\r\n    const { robots, searchfield } = this.state;\r\n    const filteredRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    })\r\n        return !robots.length ?\r\n       <h1>Loading...</h1> :\r\n      (\r\n        <div className=\"tc\">\r\n          <h1 className=\"f1\">RoboFriends</h1>\r\n          <SearchBox searchChange={this.onSearchChange}/>\r\n          <Scroll>\r\n            <ErrorBoundry>\r\n              <CardList robots={filteredRobots} />\r\n            </ErrorBoundry>\r\n          </Scroll>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}